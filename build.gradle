plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'maven-publish'
}

group = 'it.fulminazzo'
version = '1.1'

allprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'maven-publish'

    group = "${rootProject.group}"
    version = "${rootProject.version}"

    this.ext.getFileName = { name ->
        if (name == null) throw new RuntimeException("getFileName(): Name cannot be null!")
        String fileName = name
        final String projectName = rootProject.name
        if (projectName != fileName) fileName = "${projectName}-" + fileName
        return fileName + "-${rootProject.version}"
    }

    this.ext.getSpigotVersion = { name ->
        name = name.replace("-", ".").substring(1)
        if (!name.isNumber()) name = "20.2"
        return "org.spigotmc:spigot-api:1.${name}-R0.1-SNAPSHOT"
    }

    repositories {
        mavenCentral()
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"

            content {
                includeGroup 'org.bukkit'
                includeGroup 'org.spigotmc'
            }
        }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        compileOnly 'org.jetbrains:annotations:24.1.0'

        compileOnly(getSpigotVersion(project.name))

        if ("${project.name}" != "common") {
            implementation(project(":common"))
            testImplementation(project(":common"))
        }

        testCompileOnly 'org.projectlombok:lombok:1.18.30'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

        testImplementation platform('org.junit:junit-bom:5.9.1')
        testImplementation 'org.junit.jupiter:junit-jupiter'

        testImplementation(getSpigotVersion(project.name))

        testImplementation 'org.mockito:mockito-core:4.11.0'
    }

    shadowJar {
        exclude("META-INF/**")
        archiveFileName = "${getFileName(project.name)}.jar"
        manifest {
            attributes ("Manifest-Version": "${rootProject.version}")
        }
    }

    tasks.register('sourcesJar', Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    jar {
        enabled = true // Required for sub projects depending on sub projects
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        archiveFileName = "${getFileName(project.name)}-original.jar"
        dependsOn(shadowJar)
    }

    test {
        useJUnitPlatform()
    }

    build {
        dependsOn(publishToMavenLocal)
    }
}

dependencies {
    subprojects.each {implementation project(it.path)}
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }

    repositories {
        maven {
            url "https://repo.fulminazzo.it/releases"
            credentials {
                username = System.getenv("REPO_USERNAME")
                password = System.getenv("REPO_PASSWORD")
            }
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}